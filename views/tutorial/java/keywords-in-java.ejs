<!DOCTYPE html>
    <html lang="en">
       <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <title>Keywords In Java | tutorialforbeginner.com</title>

        
        <meta name="Description" content="  In this page we will learn about Simple Java Programs, Keywords In Java | Java Keywords | What are the Java Keyword? " />
        
        <meta name="author" content="tutorialforbeginner.com">
        <meta property="og:site_name" content="www.tutorialforbeginner.com" />
        <meta property="og:locale" content="en_US" />
        <meta property="og:type" content="website" />
        <link rel="shortcut icon" href="images/ico.jpg" type="image/x-icon" />
        <link rel="canonical" href="https://tutorialforbeginner.com/keywords-in-java" />
        <%- include('../../includes/boostrap-head.ejs') %>
        <style>
          .navbar-collapse .navbar-nav{float:none;margin:0 auto;text-align:center}img{max-width:100%}#footer{background:#232323;padding:30px 0 0 0;font-size:12px;color:#999}#footer a{color:#ccc}#footer a:hover{color:#fff}#footer h3.widget-title{font-size:15px;font-size:.9375rem;text-transform:uppercase;color:#fff;margin:0 0 20px}#underfooter{background:#191919;padding:15px 0;color:#777;font-size:12px}#underfooter a{color:#aaa}#underfooter a:hover{color:#fff}@media (min-width:1200px){.container{max-width:1080px}}body{overflow-x:hidden}#sidebar-wrapper{min-height:100vh;margin-left:-15rem;-webkit-transition:margin .25s ease-out;-moz-transition:margin .25s ease-out;-o-transition:margin .25s ease-out;transition:margin .25s ease-out}#sidebar-wrapper .sidebar-heading{padding:.875rem 1.25rem;font-size:1.2rem}#sidebar-wrapper .list-group{width:15rem}#page-content-wrapper{min-width:100vw}#wrapper.toggled #sidebar-wrapper{margin-left:0}@media (min-width:768px){#sidebar-wrapper{margin-left:0}#page-content-wrapper{min-width:0;width:100%}#wrapper.toggled #sidebar-wrapper{margin-left:-15rem}}.row.content{height:auto;width:auto}.sidenav{padding-top:20px;background-color:#f1f1f1;height:100%}footer{background-color:#555;color:#fff;padding:15px}@media screen and (max-width:767px){.sidenav{height:auto;padding:15px}.row.content{height:auto}}
        </style>
      
        <script data-ad-client="ca-pub-9136564254270725" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
       
        <!-- Global site tag (gtag.js) - Google Analytics -->
        <script async src="https://www.googletagmanager.com/gtag/js?id=UA-148831263-1"></script>
        <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'UA-148831263-1');
        </script>

        

       
        
    </head>


    

<body >
    <%-include('../../includes/navigation.ejs') %>
    
    
    <main id="main">
        
        <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        <!-- home-last -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-9136564254270725"
             data-ad-slot="7126124861"
             data-ad-format="auto"
             data-full-width-responsive="true"></ins>
        <script>
             (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
        
            
            
            <div class="d-flex w-100" id="wrapper">

                <!-- Sidebar -->
                <div class="bg-light border-right" id="sidebar-wrapper">
                    <div class="sidebar-heading bg-success text-center text-white rounded-top border-to"><b>Topics</b></div>
                    <div class="list-group list-group-flush">
                        <%- include('../../sitebars/java.ejs') %>
                    </div>
                </div>
                <!-- /#sidebar-wrapper -->
            
                <!-- Page Content -->
                <div id="page-content-wrapper">
            
                    <nav class="navbar navbar-expand-lg border-bottom" style="background-color: #375028;">
                        <button class="btn text-white btn-lg" style="background-color: #521212;" id="menu-toggle">&#x2190;TOPICS</button>
                
                      </nav>
            
                  <div class="container-fluid">
                      <div class="row content ">
                          
                          <div class="col-sm-12 col-lg-9 col-md-8 text-left w-100"> 
                              <h1 class="bg-dark text-center text-white">Keywords In Java</h1>
                              <p class="text-justify"><b>
                               In this page we will learn about Simple Java Programs, Keywords In Java | Java Keywords | What are the Java Keywords</b></p><hr>

                              <h2 class="my-2">Java Keywords</h2>
     
                              <p class="text-justify">
                                Java keywords are also known as reserved words. Keywords are particular words which acts as a key to a code and these are predefined words by Java so it cannot be used as variable or object name.
                              </p>
                              <h2 class="mt-4">Keywords In Java Are:</h2> 

                              <div class="table-responsive mt-3">
                                  <table class="table table-bordered text-center font-weight-bold bg-dark text-white">
                                    <tr>
                                        <td>boolean</td>
                                        <td>float</td>
                                        <td>long</td>
                                        <td>int</td>
                                        <td>short</td>
                                        <td>byte</td>
                                        <td>char</td>
                                        <td>double</td>
                                    </tr>

                                    <tr>
                                        <td>switch</td>
                                        <td>break</td>
                                        <td>case</td>
                                        <td>synchronized</td>
                                        <td>class</td>
                                        <td>continue</td>
                                        <td>default</td>
                                        <td>do</td>
                                    </tr>

                                    <tr>
                                        <td>if</td>
                                        <td>else</td>
                                        <td>enum</td>
                                        <td>extends</td>
                                        <td>final</td>
                                        <td>finally</td>
                                        <td>for</td>
                                        <td>implements</td>
                                    </tr>
                                    <tr>
                                        <td>import</td>
                                        <td>instanceof</td>
                                        <td>interface</td>
                                        <td>native</td>
                                        <td>new</td>
                                        <td>null</td>
                                        <td>package</td>
                                        <td>private</td>
                                    </tr>

                                    <tr>
                                        <td>this</td>
                                        <td>throw</td>
                                        <td>throws</td>
                                        <td>transient</td>
                                        <td>void</td>
                                        <td>volatile</td>
                                        <td>while</td>
                                        <td>try</td>
                                    </tr>
                                  </table>
                              </div>
                              


                              
                              <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                            <!-- ad-2 -->
                            <ins class="adsbygoogle"
                                style="display:block"
                                data-ad-client="ca-pub-9136564254270725"
                                data-ad-slot="8826219349"
                                data-ad-format="auto"
                                data-full-width-responsive="true"></ins>
                            <script>
                                (adsbygoogle = window.adsbygoogle || []).push({});
                            </script>
                             
                           
                            
                            <ul type="square">
                                <li class="mt-3"><b>abstract:</b> Java abstract keyword is employed to declare abstract category. Abstract category   will offer the implementation of interface. It will have abstract and non-abstract strategies.</li>
                                <li class="mt-3"><b>boolean:</b> Java boolean keyword is used to declare a variable as a boolean type. It can only hold True and False values only.</li>
                                <li class="mt-3" class="mt-3"><b>break:</b> Java break keyword is employed to interrupt loop or switch statement. It breaks this flow of the program at specified condition.</li>
                                <li class="mt-3"><b>byte:</b> Java computer memory unit keyword is employed to declare a variable that may hold associate 8-bit information values.</li>
                                <li class="mt-3"><b>base:</b> Java case keyword is employed to with the switch statements to mark blocks of text.</li>
                                <li class="mt-3"><b>catch:</b> Java catch keyword is employed to catch the exceptions generated by attempt statements. It should be used once the attempt block solely.</li>
                                <li class="mt-3"><b>char:</b> Java char keyword is employed to declare a variable that may hold unsigned 16-bit Unicode characters</li>
                                <li class="mt-3"><b>class:</b> Java category keyword is employed to declare a category.</li>
                                <li class="mt-3"><b>continue:</b> Java continue keyword is employed to continue the loop. It resumes this flow of the program and skips the remaining code at the desired condition.</li>
                                <li class="mt-3"><b>cefault:</b>  Java default keyword is employed to specify the default block of code in an exceedingly switch statement.</li>
                                <li class="mt-3"><b>do:</b> Java do keyword is employed au fait statement to declare a loop. It will ingeminate an area of the program many times.</li>
                                <li class="mt-3"><b>double:</b> Java double keyword is employed to declare a variable which will hold a 64-bit floating-point numbers.</li>
                                <li class="mt-3"><b>else:</b> Java else keyword is employed to point the choicebranches in associate degree if statement.</li>
                                <li class="mt-3"><b>enum:</b> Java enum keyword is employed to outline a hard and fast set of constants. Enum constructors square measure perpetually personal or default.</li>
                                <li class="mt-3"><b>extends:</b> Java extends keyword is employed to point that category|a category} springs from another class or interface.</li>
                                <li class="mt-3"><b>final:</b> Java final keyword is employed to point that a variable holds a continuing worth. it's applied with a variable. it's accustomed limit the user.</li>
                                <li class="mt-3"><b>finally:</b> Java finally keyword indicates a block of code in a very try-catch structure. This block is usually dead whether or not exception is handled or not.</li>
                                <li class="mt-3"><b>float:</b> JJava float keyword is employed to declare a variable which will hold a 32-bit number.</li>
                                <li class="mt-3"><b>for:</b> Java for keyword is employed to start out a for loop. it's accustomed execute a collection of instructions or functions repeatedly once some conditions become true. If the amount of iteration is fastened, it's counseled to use for loop.</li>
                                <li class="mt-3"><b>if:</b> Java if keyword tests the condition. It brings of the if block if condition is true.</li>
                                <li class="mt-3"><b>implements:</b> Java implements keyword is employed to implement associate interface.</li>
                                <li class="mt-3"><b>import:</b> Java import keyword makes categories and interfaces on the market and accessible to this ASCII text file.</li>
                                <li class="mt-3"><b>instanceof:</b> Java instanceof keyword is employed to check whether or not the thing is associate instance of the desired category or implements associate interface.</li>
                                <li class="mt-3"><b>int:</b> Java int keyword is employed to declare a variable which will hold a 32-bit signed whole number.</li>
                                <li class="mt-3"><b>interface:</b> Java interface keyword is employed to declare associate interface. It will have solely abstract strategies.</li>
                                <li class="mt-3"><b>long:</b> Java long keyword is employed to declare a variable which will hold a 64-bit whole number.</li>
                                <li class="mt-3"><b>native:</b> Java native keyword is employed to specify that a technique is enforced in native code exploitation JNI (Java Native Interface).</li>
                                <li class="mt-3"><b>new:</b> Java new keyword is employed to form new objects.</li>
                                <li class="mt-3"><b>null:</b> Java null keyword is employed to point that a reference doesn't ask something. It removes the rubbish worth.</li>
                                <li class="mt-3"><b>package:</b> Java package keyword is employed to declare a Java package that has the categories.</li>
                                <li class="mt-3"><b>private:</b> Java non-public keyword is associate access modifier. it's accustomed indicate that a technique or variable is also accessed solely within the category within which it's declared.</li>
                                <li class="mt-3"><b>protected:</b> Java protected keyword is associate access modifier. It will be accessible among package and out of doors the package however through inheritance solely. It cannot be applied on the category.</li>
                                <li class="mt-3"><b>return:</b> Java public keyword is associate access modifier. it's accustomed indicate that associate item is accessible anyplace. it's the widest scope among all different modifiers.</li>
                                <li class="mt-3"><b>short:</b> Java short keyword is employed to declare a variable which will hold a 16-bit whole number.</li>
                                <li class="mt-3"><b>static:</b> Java static keyword is employed to point that a variable or technique may be a category technique. The static keyword in Java is employed for memory management principally.</li>
                                <li class="mt-3"><b>strictfp:</b> Java strictfp is employed to limit the floating-point calculations to confirm movability.</li>
                                <li class="mt-3"><b>super:</b> Java super keyword may be a reference variable that's accustomed refer parent category object. It will be accustomed invoke immediate parent category technique.</li>
                                <li class="mt-3"><b>switch:</b> The Java switch keyword contains a switch statement that executes code supported take a look at worth. The switch statement tests the impartiality of a variable against multiple values.</li>
                                <li class="mt-3"><b>synchronized:</b> Java synchronal keyword is employed to specify the important sections or strategies in multithreaded code.</li>
                                <li class="mt-3"><b>this:</b> Java this keyword will be accustomed refer this object in an exceedingly technique or creator.</li>
                                <li class="mt-3"><b>throw:</b> Java throw keyword is employed to expressly throw associate exception. The throw keyword is principally accustomed throw custom exception. it's followed by associate instance.</li>
                                <li class="mt-3"><b>throws:</b> The Java throws keyword is employed to declare associate exception. Checked exception will be generated with throws.</li>
                                <li class="mt-3"><b>transient:</b> Java transient keyword is employed in publishing. If you outline any knowledge member as transient, it'll not be serialized.</li>
                                <li class="mt-3"><b>Try:</b> Java attempt keyword is employed to begin a block of code which will be tested for exceptions. The attempt block should be followed by either catch or finally block.</li>
                                <li class="mt-3"><b>Void:</b> Java void keyword is employed to specify that a technique doesn't have a come back worth.</li>
                                <li class="mt-3"><b>Volatile:</b> Java volatile keyword is employed to point that a variable could modification asynchronously.</li>
                                <li class="mt-3"><b>While:</b> Java whereas keyword is employed to begin a jiffy loop. This loop iterates a neighborhood of the program many times. If the amount of iteration isn't fastened, it's counseled to use whereas loop.</li>

                            </ul>
         
         </div>
                          <div class="col-sm-12 col-lg-3 col-md-4 sidenav">
                

                            <div class="well my-5">
                                
                                <details >
                                    <summary>Best way of learing</summary>
                                    <p class="text-tustify">
                                        Self learing is the best learing in the world.
                                        Discover yourself first then will get what you are And
                                        what you want to do .It will push you for self learing.
                                    </p>
                                  </details>
                            </div>

                            <div class="well my-5">
                                
                                <details >
                                    <summary>Why you need to learn coding?</summary>
                                    <p class="text-tustify">
                                        Coding will play a vital role in one's life . It will help to open 
                                        a new window of thinking . You can think better way than past . It 
                                        helps to organise all the thing in better way .
                                    </p>
                                  </details>
                            </div>
                           
                            <div class="well sticky-top">
                                <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                                <!-- h-ad1 -->
                                <ins class="adsbygoogle"
                                     style="display:block"
                                     data-ad-client="ca-pub-9136564254270725"
                                     data-ad-slot="9841091579"
                                     data-ad-format="auto"
                                     data-full-width-responsive="true"></ins>
                                <script>
                                     (adsbygoogle = window.adsbygoogle || []).push({});
                                </script>
                            </div>
                            

                          </div>
                        </div>
                      </div>
                    
                </div>
               
            
              </div>
              
              <script>
                $("#menu-toggle").click(function(e) {
                  e.preventDefault();
                  $("#wrapper").toggleClass("toggled");
                });
              </script>
            
        
    
    </main>

    

<%- include('../../includes/end.ejs') %>