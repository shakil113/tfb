<!DOCTYPE html>
    <html lang="en">
       <head>
        <meta charset="utf-8">
        
        <title>JavaScript Interview Questions and Answer</title>

        
        <meta name="Description" content="In here you will get the most aseked JavaScript Interview Questions and Answer . This javascript interview questions
        often asked by the Interviewer in the javascript interview . This Answer is 100% correct . "/>
         
        
        
        <meta name="author" content="tutorialforbeginner.com">
        <meta property="og:site_name" content="www.tutorialforbeginner.com" />
        <meta property="og:locale" content="en_US" />
        <meta property="og:type" content="website" />
        <link rel="shortcut icon" href="images/ico.jpg" type="image/x-icon" />
        <link rel="canonical" href="https://tutorialforbeginner.com/interview-questions-and-answer"/>

         <%- include('../includes/boostrap-head.ejs') %>
        <style>
            .navbar-collapse .navbar-nav{float:none;margin:0 auto;text-align:center}img{max-width:100%}#footer{background:#232323;padding:30px 0 0 0;font-size:12px;color:#999}#footer a{color:#ccc}#footer a:hover{color:#fff}#footer h3.widget-title{font-size:15px;font-size:.9375rem;text-transform:uppercase;color:#fff;margin:0 0 20px}#underfooter{background:#191919;padding:15px 0;color:#777;font-size:12px}#underfooter a{color:#aaa}#underfooter a:hover{color:#fff}@media (min-width:1200px){.container{max-width:1080px}}body{overflow-x:hidden}#sidebar-wrapper{min-height:100vh;margin-left:-15rem;-webkit-transition:margin .25s ease-out;-moz-transition:margin .25s ease-out;-o-transition:margin .25s ease-out;transition:margin .25s ease-out}#sidebar-wrapper .sidebar-heading{padding:.875rem 1.25rem;font-size:1.2rem}#sidebar-wrapper .list-group{width:15rem}#page-content-wrapper{min-width:100vw}#wrapper.toggled #sidebar-wrapper{margin-left:0}@media (min-width:768px){#sidebar-wrapper{margin-left:0}#page-content-wrapper{min-width:0;width:100%}#wrapper.toggled #sidebar-wrapper{margin-left:-15rem}}.row.content{height:auto;width:auto}.sidenav{padding-top:20px;background-color:#f1f1f1;height:cover}footer{background-color:#555;color:#fff;padding:15px}@media screen and (max-width:767px){.sidenav{height:auto;padding:15px}.row.content{height:auto}}
          </style>
        
        

        
        
        <script data-ad-client="ca-pub-9136564254270725" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>

        

          <!-- Global site tag (gtag.js) - Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-148831263-1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-148831263-1');
</script>


        
    </head>


    

  <body >
    <%- include('../includes/navigation.ejs') %>
    
    
    <main id="main">
        
        <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
        <!-- ict-ads-4 -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-9136564254270725"
             data-ad-slot="9659561509"
             data-ad-format="auto"
             data-full-width-responsive="true"></ins>
        <script>
             (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
            
                  <div class="d-flex" id="wrapper">

                    <%- include('../sitebars/interview-bar.ejs') %> 
          </div>
       </div>
                <!-- /#sidebar-wrapper -->
            
                <!-- Page Content -->
                <div id="page-content-wrapper">
            
                  <nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
                    <button class="btn btn-primary" id="menu-toggle">Contents</button>
            
                  </nav>
            
                  <div class="container-fluid">
                      <div class="row content">
                          
                          <div class="col-sm-12 col-lg-9 col-md-8 text-left"> 
                              <h1 style="background-color: green;" class="p-2 text-center text-white">JavaScript Interview Questions And Answer</h1>
                   
                             <br><p class="text-justify text-secondary"><b>
                                The JavaScript developer often face the Interview Questions when they meet viva board . Before facing viva board the javascript
                                developer should prepare of questions that they are often faced in the interview . In here we have given some questions which is
                                faced by the javascript developer many times . We are encourage JavaScript developer to prepare this questions before facing JavaScript Interview .
                              </b></p><hr>
                              <h4>1. What is JavaScript?</h4>

                              <p class=" text-justify">
                              
                                     <b>Ans:</b> JavaScript is a scripting language and It is an object-based, lightweight, cross-platform translated language.
                                       It is widely used for client-side validation and JavaScript Translator (embedded in the browser) is responsible for translating the JavaScript code for the 
                                      web browser.                                    
                              </p><br>
                              <h4>2. Write some features of JavaScript?</h4>
                              <p class=" text-justify">
                                      <b>Ans:</b>
                                <ol>
                                    <li>Complementary to HTML</li>
                                    <li>Complementary to Java</li>
                                    <li>Interpreted programming language</li>
                                    <li>Good for the applications which are network-centric</li>
                                    <li>Open source</li>
                                    <li>Cross-platform</li>
                                </ol>
                                                                          
                              </p><br>
                              
                              <h4>3. Write some of the advantages of JavaScript?</h4>
                              <p class=" text-justify">
                                      <b>Ans:</b>
                                  <ol>
                                    <li>Interactivity is high</li>
                                    <li>Less Server Interaction</li>
                                    <li>Interfaces are richer</li>
                                    
                                    <li>Feedback to the visitors is immediate</li>
                                </ol>
                                                                          
                              </p><br>
                              <h4>4. What are JavaScript Data Types?</h4>
                              <p class=" text-justify">
                                      <b>Ans:</b>
                                   <ol>
                                    <li> Number</li>
                                    <li> String</li>
                                    <li> Boolean</li>
                                    <li> Object</li>
                                    <li>Null</li>
                                </ol>
                                                                          
                              </p><br>
                              <h4>5. Which is fasterBetween JavaScript and an ASP script?</h4>
                              <p class=" text-justify">
                                      <b>Ans:</b>JavaScript is faster because JavaScript is a client-side language and thus it does not need
                                   the assistance of the web server to execute but ASP is a server-side language and hence is always slower than
                                    JavaScript.                              
                              </p><br>

                                                     
    <h4>6. How to write new line in javascript?</h4>
    <p class=" text-justify">
            <b>Ans:</b>Line Breaking within a string statement can be done by the use of a (backslash) '\', at the end of the first line
                                                
    </p><br>
    <h4>7. What will happen if an infinite while loop is run in Javascript?</h4>
    <p class=" text-justify">
        <b>Ans:</b> It will crash the browser.                      
</p><br>
                          
    <h4>8. What is prototypal Inheritance?</h4>
    <p class=" text-justify">
            <b>Ans:</b>Every object has a property called that is a prototype, where we can add methods to it 
            and when you create another object from these the newly created object will automatically inherit its 
            parent’s property.
    
    </p><br>
             <h4>9. Difference between “undefine” and “NULL” Keywords?</h4>
             <p class=" text-justify">
                    <b>Ans:</b> When we define a var but not assign any value. typeof(undefine)=> undefine
                    Null- manually done. typeof(null)=> object
                                                         
    </p><br>
    <h4>10. Difference between “var” and “let”,"Const" Keywords?</h4>
    <p class=" text-justify">
            <b>Ans:</b> <br>
            <b>Var</b> is a variable which can be used over the program. <br>
            <b>Let</b> is an instant variable that can be used after a particular task. <br>
            <b>Const</b> is a constant variable which you can not change after initialize.
            
                                                
    </p>


          
    
                              <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- ict-ads-3 -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-9136564254270725"
     data-ad-slot="3477296539"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
                            
<h4>11. Explain function hoisting in JavaScript?</h4>
    
<p class=" text-justify">

       <b>Ans:</b> JavaScript’s default behavior that allows moving declarations to the top is called Hoisting. There are 2 ways of
       creating functions in JavaScript are Function Declaration and Function Expression. Let’s find out more about
       these: <br><br>
       <b>Function Declaration:</b> A function with the specific parameters is known as function declarations. To create a variable in JavaScript is
       called declarations.See the following example: <br>
<pre class="prettyprint">
hoisted(); // logs "foo"
function hoisted() {
console.log('foo');
}</pre>
<b>Function Expression:</b> When a function is created by using an expression its called function expression. <br>
<pre class="prettyprint">
notHoisted(); // TypeError: notHoisted is not a function
var notHoisted = function() {
console.log('bar');
};</pre>


</p><br>
<h4>12. What are exports and imports?</h4>
<p class=" text-justify">
        <b>Ans:</b> Imports and exports help us to write modular javascript code. Using Imports and exports we can split our code
        into multiple files. Imports allow taking only few specific variables or methods of a file. We can import
        methods or a variables that are exported by a module. See the below example for more detail. <br>
<pre class="prettyprint">
//index.js
import name,age from './person';
console.log(name);
console.log(age);
//person.js
let name ='Sharad', occupation='developer', age =26;
export { name, age}; </pre>                                     
</p><br>

<h4>13. What is difference between module.exports and export?</h4>
<p class=" text-justify">
        <b>Ans:</b> The module is a plain JavaScript's object with an exports property. Exports is a plain JavaScriptvariable that
        happens to set to module.exports. At the end of your file, node.js will ‘return’ module.exports to the
        require function. The simplified way to view a JS file in Node could be this: <br>

<pre class="prettyprint">
var module = { exports: {} };
var exports = module.exports;
// your code
return module.exports;</pre>
    If we set a property on exports, like exports.a = 9;, that will set module.exports as well because objects are
passed around as references in JavaScript, which means that if we set multiple variables to the same object,
they are all the same object; so then exports and module.exports are the same objects 
but if you set exports to something new, it will no longer be set to module.exports, so exports and
module.exports are no longer the same objects.
                                 
</p><br>
<h4>14. How to import all exports of a file as an object.</h4>
<p class=" text-justify">
        <b>Ans:</b>
        import * as object name from ‘./file.js’ is used to import all the exported members as an object. You can simply
        access the exported variables or a methods using dot (.) operator of the object. See the following example:

<pre class="prettyprint">
objectname.member1;
objectname.member2;
objectname.memberfunc();</pre>                                                    
</p><br>
<h4>15. What is Javascript BOM?</h4>
<p class=" text-justify">
        <b>Ans:</b> The BOM stands for “Browser Object Modal” that allows Javascript to ‘talk’ to the browser,
         no standards, modern browsers implement similar BOMS – window, screen, location, history, navigator, timing, cookies                      
</p><br>
                      
<h4>16. What is the difference between the substr() and substring() functions in JavaScript?</h4>
<p class=" text-justify">
        <b>Ans:</b>The substr() function has the form substr(startIndex,length) and It returns the substring from startIndex and returns
        ‘length’ number of characters.
<pre class="prettyprint">
var s = "hello";
( s.substr(1,4) == "ello" ) // true</pre> 
  The substring() function has the form substring(startIndex,endIndex) and It returns the substring from startIndex up
  to endIndex – 1.

<pre class="prettyprint">
var s = "hello";
( s.substring(1,4) == "ell" ) // true</pre> 
</p><br>
<h4>17. List HTML DOM mouse events?</h4>
<p >
        <b>Ans:</b> <ol>
          <li>onclick()</li>
          <li>ondblclick()</li>
          <li>mousemove()</li>
          <li>mousedown()</li>
          <li>mouseover()</li>
          <li>mouseout()</li>
          <li>mouseup()</li>
        </ol>

</p><br>
                      
<h4>18. How to convert Javascript date to ISO standard?</h4>
<p class=" text-justify">
        <b>Ans:</b> toISOString() method is used to convert javascript date to ISO standard and It converts JavaScript Date object into
        a string, using the ISO standard.
<pre class="prettyprint">
var date = new Date();
var n = date.toISOString();
console.log(n);
// YYYY-MM-DDTHH:mm:ss.sssZ</pre>      

</p><br>
         <h4>19.  How to get inner Html of an element in JavaScript?
          </h4>
         <p class=" text-justify">
                <b>Ans:</b> InnerHTML property of HTML DOM is used to get inner Html of an element in the JavaScript.
<pre class="prettyprint">
 var inner= document.getElementById("inner").innerHTML ;
 console.log(inner); // This is inner Element
 document.getElementById("inner").innerHTML = "Html changed!";
 var inner= document.getElementById("inner").innerHTML ;
 console.log(inner); // Html changed!</pre>
                                                     
</p><br>
<h4>20. How to clone an object in Javascript?</h4>
<p class=" text-justify">
        <b>Ans:</b> Object.assign() method is used for cloning a particular object in Javascript.Here is sample usage

<pre class="prettyprint">
var x = {myProp: "value"};
var y = Object.assign({}, x); </pre>        
                                
</p><br>
<h4>21. What are the primitive data types in JavaScript?</h4>

    <p class=" text-justify">
    
           <b>Ans:</b> The primitive is a basic data type that’s not built out of other data types and It can only represent one single value. All the
           primitives are built-in data types by necessity, (the compiler has to know about them,) but not all built-in data
           types are primitives. <br><br>
           In JavaScript there are 5 primitive data types are available they are <b>undefined, null, boolean, string and
              number</b> are available and Everything else in Javascript is an object.
              <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<ins class="adsbygoogle"
     style="display:block; text-align:center;"
     data-ad-layout="in-article"
     data-ad-format="fluid"
     data-ad-client="ca-pub-9136564254270725"
     data-ad-slot="2687298352"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>             
    </p><br>
    <h4>22. How to get the primitive value of a string in Javascript?
      </h4>
    <p class=" text-justify">
            <b>Ans:</b>
            In Javascript valueOf() method is used to get the primitive value of a particular string. 
<pre class="prettyprint">
var myVar= "Hi!"
console.log(myVar.valueOf())</pre>                      
    </p><br>
    
    <h4>23. Explain JavaScript Event Delegation Model?
      </h4>
    <p class=" text-justify">
            <b>Ans:</b>
            In JavaScript, there are some cool stuff that makes it the best of all and of them is Delegation Model. When
            capturing and bubbling, allow functions to implement one single handler to many elements at one particular
            time then that is called an event delegation. Event delegation allows you to add event listeners to one parent instead
            of a specified nodes and that particular listener analyzes bubbled events to find a match on the child elements but many
            people think it to be complicated but in reality, it is very simple if one starts understanding it.
                                                
    </p><br>
    <h4>4.Explain Arrow functions?
      </h4>
    <p class=" text-justify">
            <b>Ans:</b> An arrow function is a consise and short way to write function expressions in Es6 or above and arrow functions
            cannot be used as constructors and also does not supports this, arguments, super, or a new target keywords. It is
            best suited for a non-method functions. In general an arrow function looks like 

<pre class="prettyprint">
const function_name=()=>{
//codes
}
const greet=()=>{
  console.log('hello');
}
greet();</pre>        
</p><br>
    <h4>25. What close() does in Javascript?</h4>
    <p class=" text-justify">
            <b>Ans:</b> In Javascript close() method is used to close the current window and You must write window.close() to ensure that
            this command is associated with a window object and not some other JavaScript object.
                             
    </p><br>
                          
    <h4>26.Explain “use strict” ?
      </h4>
    <p class=" text-justify">
            <b>Ans:</b>“use strict” is a javascript directive that is introduced in Es5 and the purpose of using “use strict” directive is to
            enforce the code is executed in strict mode. In strict mode we can’t use a variable without declaring it and “use
            strict” is ignored by earlier versions of Javascript                   
    </p><br>
    <h4>27. How to get the last index of a string in Javascript?</h4>
    <p class=" text-justify">
            <b>Ans:</b>
<pre class="prettyprint">
var myString="JavascriptQuestions";
console.log(myString.length-1);</pre>                       
    </p><br>
    
                          
    <h4>28. What does the instanceof operator do ?
      </h4>
    <p class=" text-justify">
            <b>Ans:</b>In Javascript instanceof operator checks whether an object is an instance of a class or not:

<pre class="prettyprint">
Square.prototype = new Square();
console.log(sq instanceof Square); // true</pre>        
    </p><br>
             <h4>29. Explain Promise in JavaScript?</h4>
             <p class=" text-justify">
                    <b>Ans:</b> Promise is an object in JavaScript which is used to produce a value that may give result in the future and the
                    value can be resolved value or it can be a reason which tells why the value is not resolved.
                    A promise can be of three states these are:
                    <ol>
                      <li>Fulfilled: The operation is completed and the promise has a specific value.</li>
                      <li>Rejected: The operation is failed and promise has a reason which shows why the operation failed.</li>
                      <li>Pending: The operation is not fulfilled or rejected, means it has not completed yet.</li>
                    </ol>
                                                         
    </p><br>
    <h4>30. Is it possible to do 301 redirects in Javascript ?</h4>
    <p class=" text-justify">
            <b>Ans:</b> JavaScript entirely runs on the client machine and 301 is response code that is sent by
             the server as a response. So it isn't possible to do 301 Redirects In JavaScript.
                                                
    </p>                  
                              <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                              <ins class="adsbygoogle"
                                   style="display:block; text-align:center;"
                                   data-ad-layout="in-article"
                                   data-ad-format="fluid"
                                   data-ad-client="ca-pub-9136564254270725"
                                   data-ad-slot="2458044125"></ins>
                              <script>
                                   (adsbygoogle = window.adsbygoogle || []).push({});
                              </script>     
                     </div>
                          <div class="col-sm-12 col-lg-3 col-md-4 sidenav">
                              
                        
                            <div class="well my-5">
                                
                                <details >
                                    <summary>Best way of learing</summary>
                                    <p class="text-tustify">
                                        Self learing is the best learing in the world.
                                        Discover yourself first then will get what you are And
                                        what you want to do .It will push you for self learing.
                                    </p>
                                  </details>
                            </div>

                           
                            <div class="well my-5">
                                
                                <details >
                                    <summary>Why you need to learn coding?</summary>
                                    <p class="text-tustify">
                                        Coding will play a vital role in one's life . It will help to open 
                                        a new window of thinking . You can think better way than past . It 
                                        helps to organise all the thing in better way .
                                    </p>
                                  </details>
                            </div>
                            <div class="well mt-5 sticky-top">
                                <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- ict-verticle-1 -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-9136564254270725"
     data-ad-slot="1200802774"
     data-ad-format="auto"
     data-full-width-responsive="true"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
                             

                             </div>
                          </div>
                        </div>
                      </div>
                    
                </div>
               
            
              </div>
              
              <script>
                $("#menu-toggle").click(function(e) {
                  e.preventDefault();
                  $("#wrapper").toggleClass("toggled");
                });
              </script>
            
        
    
    </main>

<%- include('../includes/end.ejs') %>